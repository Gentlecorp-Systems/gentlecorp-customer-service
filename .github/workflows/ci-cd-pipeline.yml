name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main
    tags:
      - 'v*'  # Nur fÃ¼r Versionstags (z.B. v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: gradle

      - name: Grant execute permission to Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: backend/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build & Test
        run: ./gradlew clean build --no-daemon

      - name: Run Unit Tests & Generate Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: backend/build/reports/tests/test

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/build/reports/jacoco/test/html

  analyze:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: gradle

  package:
    runs-on: ubuntu-latest
    needs: [build, analyze]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: gradle

      - name: Package Application
        run: ./gradlew bootJar

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/build/libs/*.jar

  docker:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download JAR File
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: backend/build/libs

      - name: Create .env file
        run: |
          echo "SPRING_PROFILES_ACTIVE=prod" >> .env
          echo "KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET }}" >> .env
          echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}" >> .env
          echo "SNYK_TOKEN=${{ secrets.SNYK_TOKEN }}" >> .env

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg SPRING_PROFILES_ACTIVE=prod \
            --build-arg KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET }} \
            --build-arg SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
            --build-arg SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} \
            -t flowcraft/role-mapper-backend:2025.01.1 .

      - name: Remove .env file
        run: rm .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker tag flowcraft/role-mapper-backend:2025.01.1 calebscript/role-mapper-backend:2025.01.1
          docker push calebscript/role-mapper-backend:2025.01.1
